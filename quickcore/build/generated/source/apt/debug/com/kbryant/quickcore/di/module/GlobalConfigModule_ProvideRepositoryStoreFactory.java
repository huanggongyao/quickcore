// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.kbryant.quickcore.di.module;

import com.kbryant.quickcore.repository.impl.RepositoryStore;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class GlobalConfigModule_ProvideRepositoryStoreFactory
    implements Factory<RepositoryStore> {
  private final GlobalConfigModule module;

  private final Provider<Retrofit> retrofitProvider;

  public GlobalConfigModule_ProvideRepositoryStoreFactory(
      GlobalConfigModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RepositoryStore get() {
    return Preconditions.checkNotNull(
        module.provideRepositoryStore(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<RepositoryStore> create(
      GlobalConfigModule module, Provider<Retrofit> retrofitProvider) {
    return new GlobalConfigModule_ProvideRepositoryStoreFactory(module, retrofitProvider);
  }

  /** Proxies {@link GlobalConfigModule#provideRepositoryStore(Retrofit)}. */
  public static RepositoryStore proxyProvideRepositoryStore(
      GlobalConfigModule instance, Retrofit retrofit) {
    return instance.provideRepositoryStore(retrofit);
  }
}
